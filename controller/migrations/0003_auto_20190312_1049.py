# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2019-03-12 09:49
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('analyzer', '0003_auto_20190312_1049'),
        ('controller', '0002_auto_20181109_1704'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(default='', max_length=1000)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={
                'db_table': 'activity_log',
            },
        ),
        migrations.CreateModel(
            name='JmeterInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.IntegerField(default=0)),
                ('port', models.IntegerField(default=0)),
                ('jmeter_dir', models.CharField(default='', max_length=300)),
                ('threads_number', models.IntegerField(default=0)),
                ('java_args', models.CharField(default='', max_length=1000)),
            ],
            options={
                'db_table': 'jmeter_instance',
            },
        ),
        migrations.CreateModel(
            name='JmeterInstanceStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analyzer.Project')),
            ],
            options={
                'db_table': 'jmeter_instance_statistic',
            },
        ),
        migrations.CreateModel(
            name='LoadGenerator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(default='', max_length=200, unique=True)),
                ('num_cpu', models.CharField(default='', max_length=200)),
                ('memory', models.CharField(default='', max_length=200)),
                ('memory_free', models.CharField(default='', max_length=200)),
                ('la_1', models.CharField(default='', max_length=200)),
                ('la_5', models.CharField(default='', max_length=200)),
                ('la_15', models.CharField(default='', max_length=200)),
                ('status', models.CharField(default='', max_length=200)),
                ('reason', models.CharField(default='', max_length=200)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'load_generator',
            },
        ),
        migrations.CreateModel(
            name='ProjectGraphiteSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=1000)),
                ('value', models.CharField(default='', max_length=10000)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analyzer.Project')),
            ],
            options={
                'db_table': 'project_graphite_settings',
            },
        ),
        migrations.CreateModel(
            name='TestRunningData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=200)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={
                'db_table': 'test_running_data',
            },
        ),
        migrations.AddField(
            model_name='testrunning',
            name='duration',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='testrunning',
            name='locked',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='testrunning',
            name='rampup',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='testrunning',
            name='result_file_size',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='testrunning',
            name='result_start_line',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='testrunningdata',
            name='test_running',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.TestRunning'),
        ),
        migrations.AddField(
            model_name='jmeterinstance',
            name='load_generator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.LoadGenerator'),
        ),
        migrations.AddField(
            model_name='jmeterinstance',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analyzer.Project'),
        ),
        migrations.AddField(
            model_name='jmeterinstance',
            name='test_running',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.TestRunning'),
        ),
        migrations.AddField(
            model_name='activitylog',
            name='load_generator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.LoadGenerator'),
        ),
        migrations.AlterUniqueTogether(
            name='projectgraphitesettings',
            unique_together=set([('project', 'value')]),
        ),
    ]
